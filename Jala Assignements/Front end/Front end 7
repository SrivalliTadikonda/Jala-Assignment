<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JavaScript Features Demo</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 30px;
    }
    button {
      margin: 10px 0;
    }
    .section {
      margin-bottom: 40px;
      padding: 15px;
      border: 1px solid #ccc;
    }
  </style>
</head>
<body>

  <!-- 1. `this` keyword to hide a button -->
  <div class="section">
    <h2>1. Use of <code>this</code> keyword</h2>
    <button onclick="this.style.display='none'">Click to disappear</button>
  </div>

  <!-- 2. call() and apply() -->
  <div class="section">
    <h2>2. call() vs apply()</h2>
    <p id="callResult"></p>
    <p id="applyResult"></p>
    <script>
      function greet(greeting, punctuation) {
        return `${greeting}, ${this.name}${punctuation}`;
      }

      const person = { name: "Alice" };

      const callResult = greet.call(person, "Hello", "!");
      const applyResult = greet.apply(person, ["Hi", "!!"]);

      document.getElementById("callResult").textContent = "call(): " + callResult;
      document.getElementById("applyResult").textContent = "apply(): " + applyResult;
    </script>
  </div>

  <!-- 3. Basic Counter -->
  <div class="section">
    <h2>3. Basic Counter</h2>
    <p>Counter: <span id="basicCounter">0</span></p>
    <button onclick="increment()">Count</button>

    <script>
      let count = 0;
      function increment() {
        count++;
        document.getElementById("basicCounter").textContent = count;
      }
    </script>
  </div>

  <!-- 4. Counter with Getters and Setters -->
  <div class="section">
    <h2>4. Counter with Getter and Setter</h2>
    <p>Value: <span id="getSetCounter">0</span></p>
    <button onclick="counter.value = counter.value + 1">Increment via setter</button>

    <script>
      const counter = {
        _value: 0,
        get value() {
          return this._value;
        },
        set value(val) {
          this._value = val;
          document.getElementById("getSetCounter").textContent = this._value;
        }
      };
    </script>
  </div>

  <!-- 5. Prototypes -->
  <div class="section">
    <h2>5. Object Prototype Extension</h2>
    <p id="protoDemo"></p>

    <script>
      function Person(name) {
        this.name = name;
      }

      // Add method using prototype
      Person.prototype.sayHello = function() {
        return "Hello, I am " + this.name;
      };

      const bob = new Person("Bob");
      document.getElementById("protoDemo").textContent = bob.sayHello();
    </script>
  </div>

</body>
</html>
