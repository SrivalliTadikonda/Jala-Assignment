class BaseClass:
    def __init__(self):
        self.__private_field = "I am private"
    
    def __private_method(self):
        print("This is a private method")
    
    def access_private(self):
        # Accessing private field and method inside the class is allowed
        print(self.__private_field)
        self.__private_method()


class SubClass(BaseClass):
    def try_access_private(self):
        try:
            print(self.__private_field)
        except AttributeError:
            print("Cannot access private field directly")
        try:
            self.__private_method()
        except AttributeError:
            print("Cannot access private method directly")


if __name__ == "__main__":
    obj = BaseClass()
    print("Access private members inside main method:")
    obj.access_private()  # Works fine
    
    sub = SubClass()
    print("\nTrying to access private members from subclass:")
    sub.try_access_private()
